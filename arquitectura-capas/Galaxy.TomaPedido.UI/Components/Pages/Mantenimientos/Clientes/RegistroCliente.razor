@attribute [Route(Rutas.RegistrarClientes)]
@using Galaxy.TomaPedido.Dto.Request.Clientes
@using Galaxy.TomaPedido.Dto.Response.Maestros
@using Galaxy.TomaPedido.Servicio.Interfaces
@using Galaxy.TomaPedido.UI.Components.Pages.Mantenimientos.Clientes.Componentes
@using Galaxy.TomaPedido.UI.Components.Shared
@inject IClienteServicio ClienteService
@inject NavigationManager NavigationManager
@inject IToastService toastService
@inject IMaestroServicio MaestroService

<h3>Registro Clientes</h3>

<GroupBox Titulo="Datos del Cliente" Class="mt-4">
	<ChildContent>
		<FormCliente Request="Request" ListRubros="ListRubros" OnGuardarEvent="OnGuardar"></FormCliente>
	</ChildContent>
</GroupBox>

<Loading IsLoading="IsLoading" />

@code {
	public ClienteRequestDto Request { get; set; } = new ClienteRequestDto();

	public bool IsLoading { get; set; }

	public List<DetalleMaestroResponse> ListRubros { get; set; } = new List<DetalleMaestroResponse>();

	protected override async Task OnInitializedAsync()
	{
		await OnListarRubros();
	}

	public async Task OnGuardar()
	{
		IsLoading = true;
		try
		{
			var resultado = await ClienteService.Registrar(Request);

			if (resultado != null && resultado.Success)
			{
				toastService.ShowSuccess("Cliente Registrado correctamente");
				NavigationManager.NavigateTo(@Rutas.ListarClientes);
			}
		}
		catch (Exception ex)
		{
			toastService.ShowError("Ocurrió un error al registrar el cliente: " + ex.Message);
			throw;
		}
		finally
		{
			IsLoading = false;
		}
	}

	private async Task OnListarRubros()
	{
		try
		{
			var resultado = await MaestroService.ListarDetalleByCodigoPadre("MAE_RUBROS");
			if (resultado != null && resultado.Success == true && resultado.Data != null)
			{
				ListRubros = resultado.Data;
			}
		}
		catch (Exception)
		{

			throw;
		}
	}
}
