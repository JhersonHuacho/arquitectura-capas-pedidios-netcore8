@using Galaxy.TomaPedido.Dto.Request.Clientes
@using Galaxy.TomaPedido.Dto.Response.Clientes
@using Galaxy.TomaPedido.Servicio.Interfaces
@using Galaxy.TomaPedido.UI.Components.Shared
@page "/Clientes"
@inject IClienteServicio ClienteService;
@inject NavigationManager NavigationManager;

<h3>Listado de Clientes</h3>

<GroupBox Titulo="Buscar clientes">
	<ChildContent>
		<div class="row">
			<div class="col-lg-4 col-md-4 col-sm-12">
				<label>Razon Social: </label>
				<input class="form-control" @bind="Request.RazonSocial" />
			</div>
			<div class="col-lg-4 col-md-4 col-sm-12">
				<label>Nro Documento: </label>
				<input class="form-control" @bind="Request.Ruc" />
			</div>
			<div class="col-lg-4 col-md-4 col-sm-12">
				<div class="btn btn-group btn-group-sm">
					<button class="btn btn-outline-info" @onclick="ListarClientes"><i class="bi bi-search"></i></button>
					<button class="btn btn-outline-info" @onclick="Limpiar"><i class="bi bi-trash"></i></button>
					<button class="btn btn-outline-info" @onclick="OnNuevo"><i class="bi bi-plus"></i> Nuevo</button>
				</div>
			</div>
		</div>
	</ChildContent>
</GroupBox>

<div class="row mt-3">
	<div class="table table-responsive">
		<table class="table table-bordered table-hover">
			<thead>
				<tr>
					<th>Razon social</th>
					<th>Número de documento</th>
					<th>Contacto</th>
					<th>Email</th>
					<th>Rubro</th>
					<th>Acciones</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in LstClientes)
				{
					<tr>
						<td>@item.RazonSocial</td>
						<td>@item.NumeroDocumento</td>
						<td>@item.Contacto</td>
						<td>@item.CorreoElectronico</td>
						<td>@item.Rubro</td>
						<td>
							<button class="btn btn-warning">Editar</button>
							<button class="btn btn-danger">Eliminar</button>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
</div>

<Loading IsLoading="IsLoading" />

@code {
	public ICollection<ListaClientesResponseDto> LstClientes { get; set; } = new List<ListaClientesResponseDto>();
	public BusquedaClientesRequest Request { get; set; } = new();
	public bool IsLoading { get; set; }

	protected override async Task OnInitializedAsync()
	{
		await ListarClientes();
	}

	public async Task ListarClientes()
	{
		IsLoading = true;
		try
		{
			var resultado = await ClienteService.Listar(Request);

			if (resultado != null && resultado.Success)
			{
				LstClientes = resultado.Data;
			}
		}
		catch (Exception)
		{

			throw;
		}
		finally
		{
			IsLoading = false;
		}
	}

	public async Task Limpiar()
	{
		Request = new();
		await ListarClientes();
	}

	public void OnNuevo()
	{
		NavigationManager.NavigateTo("/clientes/Registrar");
	}
}
